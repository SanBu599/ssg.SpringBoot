package ssg.com.a.controller;

import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Date;
import java.util.List;

import org.apache.tomcat.util.http.fileupload.FileUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import jakarta.servlet.http.HttpServletRequest;
import ssg.com.a.dto.PdsDto;

import ssg.com.a.service.PdsService;
import ssg.com.a.util.PdsUtil;

@RestController
public class PdsController {


	@Autowired
	PdsService service;
	
	@GetMapping("pdslist")
	public List<PdsDto> pdslist(){
		System.out.println("PdsController pdslist()" + new Date());
		
		return service.pdslist();
	}
	
	@PostMapping("uploadPds")
	public String uploadPds(@RequestParam("uploadFile")MultipartFile uploadFile,
							PdsDto pds, HttpServletRequest request) {
		System.out.println("PdsController uploadPds() " + new Date());
		System.out.println(pds.toString());
		
		String path = request.getServletContext().getRealPath("/upload");
				
		String filename = uploadFile.getOriginalFilename();
		
		String newfilename = PdsUtil.getNewfileName(filename);
		
		String filepath = path + "/" + newfilename;
		
		System.out.println(filepath);		
				
		File f = new File(filepath);
		
		try {
			BufferedOutputStream os = new BufferedOutputStream(new FileOutputStream(f));
			
			os.write(uploadFile.getBytes());	// 실제 업로드되는 부분
			os.close();
			
		} catch (Exception e) {
			return "NO";
		} 
		
		// DB 등록
		PdsDto dto = new PdsDto(pds.getId(), 
								pds.getTitle(), 
								pds.getContent(), 
								filename, 
								newfilename);
		service.uploadPds(dto);
		
		return "YES";
	}
	
	@GetMapping("getPds")
	public PdsDto getPds(int seq) {
		System.out.println("PdsController getPds()" + new Date());
		
		PdsDto pds = service.getPds(seq);
		
		return pds;
	}
	
	@PostMapping("filedownload")
	public String filedownload(int seq, String filename, String newfilename, 
			 HttpServletRequest request) {
		// 경로
		String fupload = request.getServletContext().getRealPath("/upload");

		//String fupload = "d:\\tmp";

		// 다운로드를 받을 파일
		File downloadFile = new File(fupload + "/" + newfilename);
		
		return "downloadFile";
	}
	
	@PostMapping("pdsUpdate")
	public PdsDto pdsUpdate(PdsDto pds) {
		System.out.println("PdsController pdsUpdate(PdsDto pds)" + new Date());
		
		PdsDto dto = service.pdsUpdate(pds);
	}
}
